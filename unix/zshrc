
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# f you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/opt/homebrew/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/smjrifle/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
#brew install zsh-syntax-highlighting
#git clone https://github.com/zsh-users/zsh-syntax-highlighting.git -~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
#git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k
#git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
#ZSH_THEME="robbyrussell"
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
#git clone https://github.com/agkozak/zsh-z ~/.oh-my-zsh/custom}/plugins/zsh-z
#plugins=(git z)
plugins=( git zsh-z )

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/opt/homebrew/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

autoload -Uz compinit
compinit

# Customize to your needs...
alias fucking="sudo"
alias kazissh="ssh root@kazi270.com"
alias smjssh="ssh root@142.93.100.74"
alias swssh="ssh f1b9e2i9@108.167.164.210 -p 2222"
alias saedissh="ssh root@128.199.94.12"
alias xyzssh="ssh smjrifle@saedi.works"
alias phperr="tail -f /opt/homebrew/var/log/httpd/error_log"
alias showhidden="sh /Users/smjrifle/Documents/scripts/show.sh"
alias hidehidden="sh /Users/smjrifle/Documents/scripts/hide.sh; clear"
alias smjrifle="sh /Users/smjrifle/App/tc.sh"
alias fuck='echo "what the fuck, correct it else no fucks will be given";$(thefuck $(fc -ln -1))'
alias betty="~/betty/main.rb"
alias gitpush="sh ~/git.sh"
alias mage="php -d memory_limit=-1 -f bin/magento";
alias spctlen="sudo spctl --master-enable"
alias spctlden="sudo spctl --master-disable"
alias searchreplace="sh ~/search-replace.sh"
alias keyfind="keytool -list -v -keystore ~/.android/debug.keystore -alias androiddebugkey -storepass android -keypass android"
alias apachecfg="vim /opt/homebrew/etc/httpd/httpd.conf"
alias phpcfg="vim /opt/homebrew/etc/php/7.4/php.ini"
alias pa="php artisan"

alias maissh="ssh  master_qgqtynddvg@167.71.136.236"
alias basisssh="ssh root@165.22.254.107"
alias phbssh="ssh root@68.183.239.1 -p 5522"
alias pkrssh="ssh root@159.65.139.64"
#alias yakrussh="ssh root@206.189.44.188"
alias yakrussh="ssh root@157.230.44.72"
#alias hervssh="ssh root@159.65.216.250"
alias hervssh="ssh root@206.189.145.99"
alias bbossh="ssh root@139.59.22.187"
alias classssh="ssh root@139.59.80.145"
alias ggssh="ssh root@167.71.198.103"
alias monitorssh="ssh root@monitorcreative.co.uk"
alias alphassh="ssh root@alphasite.xyz"
alias smjssh="ssh root@142.93.100.74"
alias saedissh="ssh root@128.199.94.12"
alias bnlssh="ssh root@bnl.com.np"
alias pierressh="ssh root@164.90.159.103"
alias resonatessh="ssh resonate.travel@ssh.resonate.travel"
alias avtssh="ssh airventtechnolog@212.84.174.62"

#source /sw/bin/init.sh
echo "Welcome Smjrifle"
set -o vi

export JAVA_HOME=$(/usr/libexec/java_home)

function mkcd () {mkdir $1;cd $1;}
function wpdelplugin () {wp plugin deactivate $1;wp plugin delete $1;}
#function webserver () {cd /Library/WebServer/http/$1;}
#function webserver () {cd /Users/smjrifle/webserver/$1;}
# function webserver () {cd $1;}
function webserver () { 
  if [[ $# -eq 2 ]]; then
    cd "$1"
  else
    cd "/Users/smjrifle/webserver/$1"
  fi
}
#function jsproject () {cd /Users/smjrifle/JSProject/$1;}
function jsproject () { 
  if [[ $# -eq 2 ]]; then
    cd "$1"
  else
    cd "/Users/smjrifle/JSProject/$1"
  fi
}
#function dotnetproject () {cd /Users/smjrifle/aspdotnet/$1;}
function dotnetproject () { 
  if [[ $# -eq 2 ]]; then
    cd "$1"
  else
    cd "/Users/smjrifle/aspdotnet/$1"
  fi
}
function pyproject () {cd /Users/smjrifle/PythonProject/$1;}
function passwdfind () {security find-generic-password $1;}
function nodeserver () {cd /Users/smjrifle/nodeprojects/$1;}
function androidapp () {cd /Users/smjrifle/AndroidStudioProjects/$1;}
function gi() { curl -L -s https://www.gitignore.io/api/$@ ;}
function transfer() { if [ $# -eq 0 ]; then echo "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"; return 1; fi
  tmpfile=$( mktemp -t transferXXX ); if tty -s; then basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g'); curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile; else curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile ; fi; cat $tmpfile; rm -f $tmpfile; }


_jsproject_completion() {
  local dir="/Users/smjrifle/JSProject"

  if [[ $# -eq 2 ]]; then
    dir="${dir}$2"
  fi

  if [[ -d "$dir" ]]; then
    local subdirs=($(find "$dir" -type d -maxdepth 2 2>/dev/null))
    _values 'projects' "${subdirs[@]}"
    return
  fi
}

compdef _jsproject_completion jsproject

 _webserver_completion() {
  local dir="/Users/smjrifle/webserver"

  if [[ $# -eq 2 ]]; then
    dir="${dir}$2"
  fi

  if [[ -d "$dir" ]]; then
    local subdirs=($(find "$dir" -type d -maxdepth 1 2>/dev/null))
    _values 'projects' "${subdirs[@]}"
    return
  fi
}

compdef _webserver_completion webserver

 _dotnetproject_completion() {
  local dir="/Users/smjrifle/aspdotnet"

  if [[ $# -eq 2 ]]; then
    dir="${dir}$2"
  fi

  if [[ -d "$dir" ]]; then
    local subdirs=($(find "$dir" -type d -maxdepth 1 2>/dev/null))
    _values 'projects' "${subdirs[@]}"
    return
  fi
}

compdef _dotnetproject_completion dotnetproject

export EDITOR=/usr/bin/vim
export VISUAL=/usr/bin/vim
export ANDROID_HOME=/Users/smjrifle/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH/:$ANDROID_HOME/platform-tools
export PATH="/opt/homebrew/sbin:$PATH"
export PATH="$PATH:/Users/smjrifle/.dotnet/tools"


#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/smjrifle/.sdkman"
[[ -s "/Users/smjrifle/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/smjrifle/.sdkman/bin/sdkman-init.sh"
export PATH="/opt/homebrew/opt/node@16/bin:$PATH"

 export NVM_DIR="$HOME/.nvm"
  [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

DOTNET_CLI_TELEMETRY_OPTOUT=1
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"
fi
export PATH="/opt/homebrew/opt/php@8.1/bin:$PATH"
export PATH="/opt/homebrew/opt/php@8.1/sbin:$PATH"

function https-server() {
  http-server --ssl --cert ~/.localhost-ssl/localhost.crt --key ~/.localhost-ssl/localhost.key
}
export PATH="/opt/homebrew/opt/php@7.4/bin:$PATH"
export PATH="/opt/homebrew/opt/php@7.4/sbin:$PATH"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/smjrifle/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/smjrifle/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/smjrifle/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/smjrifle/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
typeset -g POWERLEVEL9K_INSTANT_PROMPT=off
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
